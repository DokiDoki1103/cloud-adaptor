// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/gin-gonic/gin"
	"github.com/jinzhu/gorm"
	"goodrain.com/cloud-adaptor/internal/biz"
	"goodrain.com/cloud-adaptor/internal/data"
	"goodrain.com/cloud-adaptor/internal/handler"
	"goodrain.com/cloud-adaptor/internal/nsqc/producer"
)

// Injectors from wire.go:

// initGin init gin engine..
func initGin(db *gorm.DB, taskProducer producer.TaskProducer) (*gin.Engine, error) {
	cloudAccesskeyRepository := data.NewCloudAccessKeyRepo(db)
	createKubernetesTaskRepository := data.NewCreateKubernetesTaskRepo(db)
	initRainbondTaskRepository := data.NewInitRainbondRegionTaskRepo(db)
	updateKubernetesTaskRepository := data.NewUpdateKubernetesTaskRepo(db)
	taskEventRepository := data.NewTaskEventRepo(db)
	rainbondClusterConfigRepository := data.NewRainbondClusterConfigRepo(db)
	clusterUsecase := biz.NewClusterUsecase(db, taskProducer, cloudAccesskeyRepository, createKubernetesTaskRepository, initRainbondTaskRepository, updateKubernetesTaskRepository, taskEventRepository, rainbondClusterConfigRepository)
	clusterHandler := handler.NewClusterHandler(clusterUsecase)
	router := handler.NewRouter(clusterHandler)
	engine := newGinEngine(router)
	return engine, nil
}
